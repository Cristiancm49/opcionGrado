version: '3.8'

services:
  # SQL Server 2019
  sqlserver:
    image: mcr.microsoft.com/mssql/server:2019-latest
    container_name: chaira-sqlserver
    environment:
      - ACCEPT_EULA=Y
      - SA_PASSWORD=3124553100Mm
      - MSSQL_PID=Express
    ports:
      - "1433:1433"
    volumes:
      - sqlserver_data:/var/opt/mssql
      - ./database/bsd.sql:/docker-entrypoint-initdb.d/bsd.sql:ro
    networks:
      - chaira-network
    restart: unless-stopped
    healthcheck:
      test: /opt/mssql-tools/bin/sqlcmd -S localhost -U sa -P 3124553100Mm -Q "SELECT 1" || exit 1
      interval: 10s
      timeout: 3s
      retries: 10
      start_period: 10s

  # MongoDB 4.2
  mongodb:
    image: mongo:4.2
    container_name: chaira-mongodb
    environment:
      - MONGO_INITDB_ROOT_USERNAME=admin1518
      - MONGO_INITDB_ROOT_PASSWORD=3124553100Mm
      - MONGO_INITDB_DATABASE=ChairaMongoDB
    ports:
      - "27017:27017"
    volumes:
      - mongodb_data:/data/db
      - ./database/mongo-init.js:/docker-entrypoint-initdb.d/mongo-init.js:ro
    networks:
      - chaira-network
    restart: unless-stopped
    healthcheck:
      test: echo 'db.runCommand("ping").ok' | mongo localhost:27017/test --quiet
      interval: 10s
      timeout: 10s
      retries: 5
      start_period: 40s

  # Redis (Para cache futuro)
  redis:
    image: redis:7-alpine
    container_name: chaira-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - chaira-network
    restart: unless-stopped
    command: redis-server --appendonly yes

volumes:
  sqlserver_data:
    driver: local
  mongodb_data:
    driver: local
  redis_data:
    driver: local

networks:
  chaira-network:
    driver: bridge
